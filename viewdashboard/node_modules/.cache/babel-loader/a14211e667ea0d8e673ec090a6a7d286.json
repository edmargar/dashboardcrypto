{"ast":null,"code":"var _jsxFileName = \"/home/edmar/projetos/dashboardcrypto/viewdashboard/src/component/negociacoes/Datagrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'tipo',\n  headerName: 'Operação'\n}, {\n  field: 'cryptomoeda',\n  headerName: 'Moeda',\n  valueGetter: params => {\n    let result = [];\n    result.push(params.row.cryptomoeda[0].nome);\n    return result;\n  }\n}, {\n  field: 'valor_operacao',\n  headerName: 'Valor da operação'\n}, {\n  field: 'quantidade',\n  headerName: 'Quantidade'\n}, {\n  field: 'exchange.nome',\n  headerName: 'Exchange',\n  width: '100%',\n  valueGetter: params => {\n    let result = [];\n    result.push(params.row.exchange[0].nome);\n    return result;\n  }\n}, {\n  field: 'data',\n  headerName: 'Data da operação',\n  width: '100%'\n}];\n\nconst DataTable = () => {\n  _s();\n\n  const [tableData, setTableData] = useState([]);\n  const [nbRows, setNbRows] = React.useState(5);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/api/finance/\").then(data => data.json()).then(data => setTableData(data)).then(data => setNbRows(data));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 700,\n      width: '90%',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Negocia\\xE7\\xF5es\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        autoHeight: true,\n        ...tableData,\n        rows: tableData.rows.slice(0, nbRows),\n        columns: columns,\n        pageSize: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataTable, \"TeLqtah3XCZA42+ZBVO6Zf6kiRs=\");\n\n_c = DataTable;\nexport default DataTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"sources":["/home/edmar/projetos/dashboardcrypto/viewdashboard/src/component/negociacoes/Datagrid.js"],"names":["React","useState","useEffect","DataGrid","columns","field","headerName","valueGetter","params","result","push","row","cryptomoeda","nome","width","exchange","DataTable","tableData","setTableData","nbRows","setNbRows","fetch","then","data","json","height","textAlign","display","rows","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,OAAO,GAAG,CACZ;AAACC,EAAAA,KAAK,EAAE,MAAR;AAAgBC,EAAAA,UAAU,EAAE;AAA5B,CADY,EAEZ;AAACD,EAAAA,KAAK,EAAE,aAAR;AAAuBC,EAAAA,UAAU,EAAE,OAAnC;AACEC,EAAAA,WAAW,EAAGC,MAAD,IAAY;AACzB,QAAIC,MAAM,GAAG,EAAb;AACAA,IAAAA,MAAM,CAACC,IAAP,CAAYF,MAAM,CAACG,GAAP,CAAWC,WAAX,CAAuB,CAAvB,EAA0BC,IAAtC;AACA,WAAOJ,MAAP;AACD;AALD,CAFY,EAQZ;AAACJ,EAAAA,KAAK,EAAE,gBAAR;AAA0BC,EAAAA,UAAU,EAAE;AAAtC,CARY,EASZ;AAACD,EAAAA,KAAK,EAAE,YAAR;AAAsBC,EAAAA,UAAU,EAAE;AAAlC,CATY,EAUZ;AAACD,EAAAA,KAAK,EAAE,eAAR;AAAyBC,EAAAA,UAAU,EAAE,UAArC;AAAiDQ,EAAAA,KAAK,EAAE,MAAxD;AACEP,EAAAA,WAAW,EAAGC,MAAD,IAAY;AACzB,QAAIC,MAAM,GAAG,EAAb;AACAA,IAAAA,MAAM,CAACC,IAAP,CAAYF,MAAM,CAACG,GAAP,CAAWI,QAAX,CAAoB,CAApB,EAAuBF,IAAnC;AACA,WAAOJ,MAAP;AACD;AALD,CAVY,EAgBZ;AAACJ,EAAAA,KAAK,EAAE,MAAR;AAAgBC,EAAAA,UAAU,EAAE,kBAA5B;AAAgDQ,EAAAA,KAAK,EAAE;AAAvD,CAhBY,CAAhB;;AAkBA,MAAME,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBpB,KAAK,CAACC,QAAN,CAAe,CAAf,CAA5B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACKC,IADL,CACWC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADpB,EAEKF,IAFL,CAEWC,IAAD,IAAUL,YAAY,CAACK,IAAD,CAFhC,EAGKD,IAHL,CAGWC,IAAD,IAAUH,SAAS,CAACG,IAAD,CAH7B;AAIH,GALQ,CAAT;AAOA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACE,MAAAA,MAAM,EAAE,GAAT;AAAcX,MAAAA,KAAK,EAAE,KAArB;AAA4BY,MAAAA,SAAS,EAAE;AAAvC,KAAZ;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBF,QAAAA,MAAM,EAAE;AAA3B,OAAZ;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,UAAU,MAApB;AAAA,WAAyBR,SAAzB;AACI,QAAA,IAAI,EAAEA,SAAS,CAACW,IAAV,CAAeC,KAAf,CAAqB,CAArB,EAAwBV,MAAxB,CADV;AAEI,QAAA,OAAO,EAAEf,OAFb;AAGI,QAAA,QAAQ,EAAE;AAHd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAvBD;;GAAMY,S;;KAAAA,S;AAyBN,eAAeA,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { DataGrid } from '@mui/x-data-grid';\n\nconst columns = [\n    {field: 'tipo', headerName: 'Operação'},\n    {field: 'cryptomoeda', headerName: 'Moeda',\n      valueGetter: (params) => {\n      let result = [];\n      result.push(params.row.cryptomoeda[0].nome);\n      return result;\n    }},\n    {field: 'valor_operacao', headerName: 'Valor da operação'},\n    {field: 'quantidade', headerName: 'Quantidade'},\n    {field: 'exchange.nome', headerName: 'Exchange', width: '100%',\n      valueGetter: (params) => {\n      let result = [];\n      result.push(params.row.exchange[0].nome);\n      return result;\n    }},\n    {field: 'data', headerName: 'Data da operação', width: '100%'}\n]\nconst DataTable = () => {\n    const [tableData, setTableData] = useState([]);\n    const [nbRows, setNbRows] = React.useState(5);\n\n    useEffect(() => {\n        fetch(\"http://localhost:8000/api/finance/\")\n            .then((data) => data.json())\n            .then((data) => setTableData(data))\n            .then((data) => setNbRows(data))\n    })\n\n    return(\n        <div style={{height: 700, width: '90%', textAlign: 'center'}}>\n            <h2>Negociações</h2>\n            <div style={{ display: 'flex', height: '100%' }}>\n                <DataGrid autoHeight {...tableData}\n                    rows={tableData.rows.slice(0, nbRows)}\n                    columns={columns}\n                    pageSize={10}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default DataTable"]},"metadata":{},"sourceType":"module"}