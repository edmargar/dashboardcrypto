{"ast":null,"code":"var _jsxFileName = \"/home/edmar/projetos/dashboardcrypto/viewdashboard/src/pages/Negociacoes/index.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'code',\n  label: 'ISO\\u00a0Code',\n  minWidth: 100\n}, {\n  id: 'population',\n  label: 'Population',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'size',\n  label: 'Size\\u00a0(km\\u00b2)',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'density',\n  label: 'Density',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toFixed(2)\n}];\n\nfunction createData(name, code, population, size) {\n  const density = population / size;\n  return {\n    name,\n    code,\n    population,\n    size,\n    density\n  };\n}\n\nexport default function StickyHeadTable() {\n  _s();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      width: '100%',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      sx: {\n        maxHeight: 440\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: column.format && typeof value === 'number' ? column.format(value) : value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 25\n                }, this);\n              })\n            }, row.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StickyHeadTable, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n\n_c = StickyHeadTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"StickyHeadTable\");","map":{"version":3,"sources":["/home/edmar/projetos/dashboardcrypto/viewdashboard/src/pages/Negociacoes/index.js"],"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","createData","name","code","population","size","density","StickyHeadTable","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","width","overflow","maxHeight","map","column","rows","slice","row","length"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\n\nconst columns = [\n  { id: 'name', label: 'Name', minWidth: 170 },\n  { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\n  {\n    id: 'population',\n    label: 'Population',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'size',\n    label: 'Size\\u00a0(km\\u00b2)',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'density',\n    label: 'Density',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toFixed(2),\n  },\n];\n\nfunction createData(name, code, population, size) {\n  const density = population / size;\n  return { name, code, population, size, density };\n}\n\nexport default function StickyHeadTable() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\n      <TableContainer sx={{ maxHeight: 440 }}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === 'number'\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}