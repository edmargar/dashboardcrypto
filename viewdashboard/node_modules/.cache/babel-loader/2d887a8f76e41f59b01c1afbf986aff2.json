{"ast":null,"code":"var _jsxFileName = \"/home/edmar/projetos/dashboardcrypto/viewdashboard/src/component/negociacoes/Datagrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'tipo',\n  headerName: 'Operação'\n}, {\n  field: 'cryptomoeda',\n  headerName: 'Moeda',\n  valueGetter: params => {\n    let result = [];\n    result.push(params.row.cryptomoeda[0].nome);\n    console.log(result);\n    return result;\n  }\n}, {\n  field: 'valor_operacao',\n  headerName: 'Valor da operação'\n}, {\n  field: 'quantidade',\n  headerName: 'Quantidade'\n}, {\n  field: 'exchange.nome',\n  headerName: 'Exchange'\n}, {\n  field: 'data',\n  headerName: 'Data da operação',\n  width: '100%'\n}];\n\nconst DataTable = () => {\n  _s();\n\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/api/finance/\").then(data => data.json()).then(data => setTableData(data));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 700,\n      width: '90%',\n      textAlign: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: tableData,\n      columns: columns,\n      pageSize: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DataTable, \"qcVQMfdRY2vxgSp5dutEfuJRk7k=\");\n\n_c = DataTable;\nexport default DataTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"sources":["/home/edmar/projetos/dashboardcrypto/viewdashboard/src/component/negociacoes/Datagrid.js"],"names":["React","useState","useEffect","DataGrid","columns","field","headerName","valueGetter","params","result","push","row","cryptomoeda","nome","console","log","width","DataTable","tableData","setTableData","fetch","then","data","json","height","textAlign"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,OAAO,GAAG,CACZ;AAACC,EAAAA,KAAK,EAAE,MAAR;AAAgBC,EAAAA,UAAU,EAAE;AAA5B,CADY,EAEZ;AAACD,EAAAA,KAAK,EAAE,aAAR;AAAuBC,EAAAA,UAAU,EAAE,OAAnC;AACCC,EAAAA,WAAW,EAAGC,MAAD,IAAY;AACxB,QAAIC,MAAM,GAAG,EAAb;AACAA,IAAAA,MAAM,CAACC,IAAP,CAAYF,MAAM,CAACG,GAAP,CAAWC,WAAX,CAAuB,CAAvB,EAA0BC,IAAtC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACA,WAAOA,MAAP;AACD;AAND,CAFY,EASZ;AAACJ,EAAAA,KAAK,EAAE,gBAAR;AAA0BC,EAAAA,UAAU,EAAE;AAAtC,CATY,EAUZ;AAACD,EAAAA,KAAK,EAAE,YAAR;AAAsBC,EAAAA,UAAU,EAAE;AAAlC,CAVY,EAWZ;AAACD,EAAAA,KAAK,EAAE,eAAR;AAAyBC,EAAAA,UAAU,EAAE;AAArC,CAXY,EAYZ;AAACD,EAAAA,KAAK,EAAE,MAAR;AAAgBC,EAAAA,UAAU,EAAE,kBAA5B;AAAgDU,EAAAA,KAAK,EAAE;AAAvD,CAZY,CAAhB;;AAcA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACKC,IADL,CACWC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADpB,EAEKF,IAFL,CAEWC,IAAD,IAAUH,YAAY,CAACG,IAAD,CAFhC;AAGH,GAJQ,CAAT;AAMA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACE,MAAAA,MAAM,EAAE,GAAT;AAAcR,MAAAA,KAAK,EAAE,KAArB;AAA4BS,MAAAA,SAAS,EAAE;AAAvC,KAAZ;AAAA,2BACI,QAAC,QAAD;AACI,MAAA,IAAI,EAAEP,SADV;AAEI,MAAA,OAAO,EAAEd,OAFb;AAGI,MAAA,QAAQ,EAAE;AAHd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAlBD;;GAAMa,S;;KAAAA,S;AAoBN,eAAeA,SAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { DataGrid } from '@mui/x-data-grid';\n\nconst columns = [\n    {field: 'tipo', headerName: 'Operação'},\n    {field: 'cryptomoeda', headerName: 'Moeda',\n     valueGetter: (params) => {\n      let result = [];\n      result.push(params.row.cryptomoeda[0].nome);\n      console.log(result);\n      return result;\n    }},\n    {field: 'valor_operacao', headerName: 'Valor da operação'},\n    {field: 'quantidade', headerName: 'Quantidade'},\n    {field: 'exchange.nome', headerName: 'Exchange'},\n    {field: 'data', headerName: 'Data da operação', width: '100%'}\n]\nconst DataTable = () => {\n    const [tableData, setTableData] = useState([])\n\n    useEffect(() => {\n        fetch(\"http://localhost:8000/api/finance/\")\n            .then((data) => data.json())\n            .then((data) => setTableData(data))\n    })\n\n    return(\n        <div style={{height: 700, width: '90%', textAlign: 'center'}}>\n            <DataGrid\n                rows={tableData}\n                columns={columns}\n                pageSize={10}\n            />\n        </div>\n    )\n}\n\nexport default DataTable"]},"metadata":{},"sourceType":"module"}