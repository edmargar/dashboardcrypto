{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from 'react';\n\nfunction Crypto() {\n  _s();\n\n  const [crypto, setCrypto] = useState([]);\n  useEffect(() => {\n    const loadData = () => {\n      fetch('http://localhost:8000/api/crypto/').then(response => response.json()).then(data => setCrypto(data));\n    };\n\n    loadData();\n  }, []);\n  /*};\n  \n  /*export class Listcrypto extends Component{*/\n\n  /*render(){\n      return(\n          <div>\n              {crypto.map(crypto => (\n                  <h1 key={crypto.id}>{crypto.sigla} {crypto.nome}</h1>\n              ))};\n          </div>\n       );\n  }*/\n}\n\n_s(Crypto, \"swxaloRz9rFruK3oOdjJQ1gcxpE=\");\n\n_c = Crypto;\n\nvar _c;\n\n$RefreshReg$(_c, \"Crypto\");","map":{"version":3,"sources":["/home/edmar/projetos/dashboardcrypto/viewdashboard/src/component/crypto/Listcrypto.jsx"],"names":["React","Component","useEffect","useState","Crypto","crypto","setCrypto","loadData","fetch","then","response","json","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;;AAEA,SAASC,MAAT,GAAiB;AAAA;;AACT,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMK,QAAQ,GAAG,MAAM;AACnBC,MAAAA,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIN,SAAS,CAACM,IAAD,CAF3B;AAGH,KAJD;;AAKAL,IAAAA,QAAQ;AACX,GAPQ,EAON,EAPM,CAAT;AAQR;AACA;AACA;;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGC;;GAzBQH,M;;KAAAA,M","sourcesContent":["import React, { Component, useEffect, useState } from 'react'\n\nfunction Crypto(){\n        const [crypto, setCrypto] = useState([]);\n\n        useEffect(() => {\n            const loadData = () => {\n                fetch('http://localhost:8000/api/crypto/')\n                    .then(response => response.json())\n                    .then(data => setCrypto(data))\n            };\n            loadData();\n        }, []);\n/*};\n\n/*export class Listcrypto extends Component{*/\n    /*render(){\n        return(\n            <div>\n                {crypto.map(crypto => (\n                    <h1 key={crypto.id}>{crypto.sigla} {crypto.nome}</h1>\n                ))};\n            </div>\n\n        );\n    }*/\n\n}\n"]},"metadata":{},"sourceType":"module"}