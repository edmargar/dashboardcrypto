{"ast":null,"code":"var _jsxFileName = \"/home/edmar/projetos/dashboardcrypto/viewdashboard/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { listcrypto } from './components/listcrypto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [crypto, setCrypto] = useState([]);\n  useEffect(() => {\n    const loadData = () => {\n      fetch('http://localhost:8000/crypto/').then(response => response.json()).then(data => setCrypto(data));\n    };\n\n    loadData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"listcrypto\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"swxaloRz9rFruK3oOdjJQ1gcxpE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/edmar/projetos/dashboardcrypto/viewdashboard/src/App.js"],"names":["useEffect","useState","listcrypto","App","crypto","setCrypto","loadData","fetch","then","response","json","data"],"mappings":";;;AAAA,SAAQA,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;AACA,SAAQC,UAAR,QAAyB,yBAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,QAAQ,GAAG,MAAM;AACnBC,MAAAA,KAAK,CAAC,+BAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIN,SAAS,CAACM,IAAD,CAF3B;AAGH,KAJD;;AAKAL,IAAAA,QAAQ;AACX,GAPQ,EAOP,EAPO,CAAT;AASF,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACM;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAjBQH,G;;KAAAA,G;AAmBT,eAAeA,GAAf","sourcesContent":["import {useEffect,useState} from 'react';\nimport {listcrypto} from './components/listcrypto'\n\nfunction App() {\n    const [crypto, setCrypto] = useState([])\n\n    useEffect(() => {\n        const loadData = () => {\n            fetch('http://localhost:8000/crypto/')\n                .then(response => response.json())\n                .then(data => setCrypto(data))\n        }\n        loadData();\n    },[])\n\n  return (\n    <div className=\"App\">\n          <listcrypto/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}