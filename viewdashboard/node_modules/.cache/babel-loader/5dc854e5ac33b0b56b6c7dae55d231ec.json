{"ast":null,"code":"var _jsxFileName = \"/home/edmar/projetos/dashboardcrypto/viewdashboard/src/component/crypto/Listcrypto.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Crypto() {\n  _s();\n\n  const [crypto, setCrypto] = useState([]);\n  useEffect(() => {\n    const loadData = () => {\n      fetch('http://localhost:8000/api/crypto/').then(response => response.json()).then(data => setCrypto(data));\n    };\n\n    loadData();\n  }, []);\n}\n\n_s(Crypto, \"swxaloRz9rFruK3oOdjJQ1gcxpE=\");\n\n_c = Crypto;\n;\nexport class Listcrypto extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Crypto\");","map":{"version":3,"sources":["/home/edmar/projetos/dashboardcrypto/viewdashboard/src/component/crypto/Listcrypto.jsx"],"names":["React","Component","Crypto","crypto","setCrypto","useState","useEffect","loadData","fetch","then","response","json","data","Listcrypto","render"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,SAASC,MAAT,GAAiB;AAAA;;AACT,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMC,QAAQ,GAAG,MAAM;AACnBC,MAAAA,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIR,SAAS,CAACQ,IAAD,CAF3B;AAGH,KAJD;;AAKAL,IAAAA,QAAQ;AACX,GAPQ,EAON,EAPM,CAAT;AAQP;;GAXQL,M;;KAAAA,M;AAWR;AAED,OAAO,MAAMW,UAAN,SAAyBZ,SAAzB,CAAkC;AACrCa,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAPoC","sourcesContent":["import React, { Component } from 'react'\n\nfunction Crypto(){\n        const [crypto, setCrypto] = useState([]);\n\n        useEffect(() => {\n            const loadData = () => {\n                fetch('http://localhost:8000/api/crypto/')\n                    .then(response => response.json())\n                    .then(data => setCrypto(data))\n            };\n            loadData();\n        }, []);\n};\n\nexport class Listcrypto extends Component{\n    render(){\n        return(\n            <div>\n                dashboard\n            </div>\n        );\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}